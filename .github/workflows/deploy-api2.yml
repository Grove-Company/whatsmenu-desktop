name: Deploy API 2 to EC2

on:
  push:
    branches:
      - beta

  pull_request:
    types: [closed]
    branches:
      - main

    paths:
      - "apps/api/v2"

env:
  BRANCH: ${{ github.ref_name }}

jobs:
  build:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.changed_files, 'apps/api/v2/')
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the API
        run: pnpm run build

      - name: Package application
        run: |
          tar -czf deploy.tar.gz build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: deploy-package
          path: deploy.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ec2_host: ${{ fromJson(vars.EC2_DEPLOY_HOSTS) }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: deploy-package

      - name: Deploy to EC2 $BRANCH
        env:
          EC2_USER: ${{ vars.EC2_USER_1 }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          PROJECT_PATH: ${{ env.BRANCH == 'beta' && vars.API2_BETA_PATH || vars.API2_PROD_PATH }}
          ENV_PATH: ${{ env.BRANCH == 'beta' && vars.API2_BETA_ENV_HOST || vars.API2_PROD_ENV_HOST }}
        run: |
          echo "$EC2_KEY" > private_key.pem
          chmod 600 private_key.pem

          mkdir -p ~/.ssh

          ssh-keyscan -H ${{ matrix.ec2_host }} >> ~/.ssh/known_hosts

          scp -i private_key.pem deploy.tar.gz ubuntu@${{ matrix.ec2_host }}:$PROJECT_PATH

          ssh -i private_key.pem ubuntu@${{ matrix.ec2_host }} << 'EOF'
            cd $PROJECT_PATH
            rm -rf build
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.14.0/bin:/home/ubuntu/.local/share/pnpm
            pnpm install
            scp ${{ secrets.EC2_ENV_HOST }}:$ENV_PATH .env
            cd build
            ln -s ../.env .env
            pm2 start ../${{ env.BRANCH == 'beta' && 'ecosystem_beta.config.cjs' || 'ecosystem.config.cjs' }}.json
          EOF

          rm private_key.pem
