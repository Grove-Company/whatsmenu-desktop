name: Deploy API 2 to EC2

on:
  push:
    branches:
      - beta
      - feat/ncm
    paths:
      - "apps/api/v2/**"
      - ".github/workflows/deploy-api2.yml"

  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - "apps/api/v2/**"
      - ".github/workflows/deploy-api2.yml"

env:
  BRANCH: ${{ github.ref_name }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    strategy:
      matrix:
        ec2_host: ${{ fromJson(github.ref_name  == 'beta' && vars.EC2_DEPLOY_HOSTS_1 || vars.EC2_DEPLOY_HOSTS_2) }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "10"

      - name: Install dependencies
        run: npm install

      - name: Package application
        run: |
          tar -czf deploy.tar.gz --exclude='node_modules' -C ./apps/api/v2 .

      - name: Deploy to EC2 ${{ env.BRANCH }}
        env:
          EC2_USER: ${{ vars.EC2_USER_1 }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          PROJECT_PATH: ${{ env.BRANCH == 'beta' && vars.API2_BETA_PATH || vars.API2_PROD_PATH }}
          ENV_PATH: ${{ env.BRANCH == 'beta' && vars.API2_BETA_ENV_HOST || vars.API2_PROD_ENV_HOST }}
        run: |
          echo "$EC2_KEY" > private_key.pem
          chmod 600 private_key.pem

          mkdir -p ~/.ssh

          ssh-keyscan -H ${{ matrix.ec2_host }} >> ~/.ssh/known_hosts

          scp -i private_key.pem deploy.tar.gz $EC2_USER@${{ matrix.ec2_host }}:$PROJECT_PATH

          ssh -i private_key.pem $EC2_USER@${{ matrix.ec2_host }} << 'EOF'
            cd ${{ env.PROJECT_PATH }}
            sudo rm -rf public_html/*
            tar -xzf deploy.tar.gz -C public_html
            ls -la public_html
            rm deploy.tar.gz
            cd public_html
            scp ${{ secrets.EC2_ENV_HOST }}:${{ env.ENV_PATH }} .env
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
            npm install --ignore-scripts
            pm2 start ${{ env.BRANCH == 'beta' && 'ecosystem_beta.config.cjs' || 'ecosystem.config.cjs' }}
          EOF

          rm private_key.pem
