@layout('inner/layout')

@section('content')
<div class="">
  <div class="ui grid">
      <div class="sixteen wide column centered">
          <a class="ui button blue botLEFT hide-for-large">Menu</a>
          @if(showMessage())
            @include('inner/updatemessage')
          @endif
          <h1>Pedidos de Hoje</h1>
          <table class="ui celled table striped selectable">
              <thead style="display: none !important" class="hide-for-small-only">
                  <tr>
                      <th>Impr.</th>
                      <th>Cód. Pedido</th>
                      <th>Nome</th>
                      <th>Tel</th>
                      <th>Total</th>
                      <th>Pagamento</th>
                      <th>Troco para:</th>
                      <th>Troco</th>
                      <th>Status</th>
                  </tr>
              </thead>
              <tbody id="listRequests">
                {{--
                  @each(item in requests)
                    <tr class="positivee{{item.status === 'canceled' ? ' canceled' : ''}}" data-request="{{stringify(item)}}">
                      <td class="printer"><i class="print icon"></i></td>
                      <td class="bot-pedido">
                        <span class="show-for-small-only">
                          <b>Cód. Pedido:</b>
                          @if(item.cupomId)
                            <i style="font-size: 15px" class="tag icon"></i> wm{{ item.code }}
                          @else
                            wm{{ item.code }}
                          @endif
                        </span>
                        <h6 class="ui icon header hide-for-small-only {{ item.cupomId ? 'cupomPop' : ''   }}" {{ item.cupomId ? 'data-cupom='+item.cupom.code+'' : '' }} data-variation="mini">
                          @if(item.cupomId)
                            <i style="font-size: 15px" class="tag icon"></i>
                          @endif
                          <div class="content">
                            <div class="sub header">wm{{ item.code }}</div>
                          </div>
                        </h6>
                      </td>
                      <td class="bot-pedido">{{ item.name }}</td>
                      <td class="bot-pedido"><span class="show-for-small-only"><b>Tel.:</b></span> {{ item.contact }}</td>
                      @if(item.typeDelivery === 0 && item.taxDelivery > 0)
                        <td class="bot-pedido"><span class="show-for-small-only"><b>Total:</b></span> {{ formatCurrency((item.total - calcCupomValue(item)) + item.taxDelivery) }}</td>
                      @else
                        <td class="bot-pedido"><span class="show-for-small-only"><b>Total:</b></span> {{ formatCurrency(item.total - calcCupomValue(item)) }}</td>
                      @endif
                      <td class="bot-pedido"><span class="show-for-small-only"><b>Pagamento em:</b></span> {{ item.formPayment }}</td>
                      <td class="bot-pedido"><span class="show-for-small-only"><b>Troco para:</b></span> {{ formatCurrency(item.transshipment) }}</td>
                      @if(item.transshipment > 0 && item.typeDelivery === 0)
                        <td class="bot-pedido"><span class="show-for-small-only"><b>Troco:</b></span> {{ formatCurrency(item.transshipment - ((item.total - calcCupomValue(item)) + item.taxDelivery)) }}</td>
                        @elseif(item.formPayment !== 'Dinheiro')
                        <td class="bot-pedido"><span class="show-for-small-only"><b>Troco:</b></span> {{ formatCurrency(0) }}</td>
                        @else
                        <td class="bot-pedido"><span class="show-for-small-only"><b>Troco:</b></span> {{ formatCurrency(item.transshipment != 0 ? item.transshipment - (item.total - calcCupomValue(item)) : 0) }}</td>
                      @endif
                      <td>
                        @if(item.status === null)
                          <a target="_blank" href="https://wa.me/55{{item.contact}}?text={{encodeURI(replace(profile.options.placeholders.statusProduction, '[NOME]', item.name))}}" data-request="{{item.id}}" class="ui button small blue btn-production">Recebido</a>
                          @if(item.typeDelivery === 0)
                            <a target="_blank" href="https://wa.me/55{{item.contact}}?text={{encodeURI(replace(profile.options.placeholders.statusSend, '[NOME]', item.name))}}" data-request="{{item.id}}" class="ui button small orange btn-transport">Entregando</a>
                            @else
                            <a target="_blank" href="https://wa.me/55{{item.contact}}?text={{encodeURI(replace(profile.options.placeholders.statusToRemove, '[NOME]', item.name))}}" data-request="{{item.id}}" class="ui button small orange btn-transport">Pronto Retirar</a>
                          @endif

                        @elseif(item.status === 'production')
                          <button data-request="{{item.id}}" class="ui button small blue basic btn-production">Recebido</button>
                          @if(item.typeDelivery === 0)
                            <a target="_blank" href="https://wa.me/55{{item.contact}}?text={{encodeURI(replace(profile.options.placeholders.statusSend, '[NOME]', item.name))}}" data-request="{{item.id}}" class="ui button small orange btn-transport">Entregando</a>
                            @else
                            <a target="_blank" href="https://wa.me/55{{item.contact}}?text={{encodeURI(replace(profile.options.placeholders.statusToRemove, '[NOME]', item.name))}}" data-request="{{item.id}}" class="ui button small orange btn-transport">Pronto Retirar</a>
                          @endif

                        @else

                          <button data-request="{{item.id}}" class="ui button small blue basic btn-production">Recebido</button>
                          <button data-request="{{item.id}}" class="ui button small orange basic btn-transport">Entregando</button>

                          @endif
                      </td>
                    </tr>
                  @endeach
                --}}
              </tbody>
              <tfoot>
                  <tr>
                      <th colspan="9">
                          <div class="ui right aligned pagination">
                              {{--  Exibindo 1 até 2 do total de 2  --}}
                          </div>
                      </th>
                  </tr>
              </tfoot>
          </table>

      </div>
  </div>
</div>

<style>
  body > div.ui.dimmer.modals.page.transition.visible.active > div.ui.ticket.modal.transition.visible.active.scrolling {
    display: block !important;
    left: 0;
    top: 0;
    margin: 0;
    box-shadow: none !important;
  }


</style>

<!-- modal click pedido -->
<div style="box-shadow: none; min-height: 75vh" class="ui pedido longer modal">
  <i class="close icon"></i>
  {{--  <div class="header">Cliente</div>  --}}
  <div class="scrolling content" style="min-height: 75vh">
    @include('inner/modals/partials/ticket')
  </div>
  <div class="actions">
    <span style="float:left" id="cancelButton">
      <button id="printTicket" class="ui label red large">Cancelar</button>
    </span>
    <button id="printTicket" class="ui black basic button">IMPRIMIR</button>
  </div>
  {{--  <div id="contentModalOriginal" class="content"><div><div class="ui segment secondary"><div class="ui two column grid divided stackable middle aligned"><div class="column"><h3>Jason</h3><p id="contact" class="medium-font"><b>Tel.:</b> 13997884443</p></div><div class="column"><h4>Endereço</h4><div class="ui list large"><div id="street" class="item">Rua Tupi, 2 </div><div class="item">Tupi • Praia Grande</div><div class="item">CEP: 11703260</div></div></div></div></div><h3>Pedidos</h3><div class="ui divider section"></div><div class="ui label basic orange large">Pedido: 31</div><div class="ui label basic blue large">Data: 09-07-2020 13:56:44</div><div class="ui label basic red large">Pagamento: Dinheiro</div><table class="ui table very basic"><thead class="hide-for-small-only"><tr><th>Qtd.</th><th>Pedido</th><th>Valor</th></tr></thead><tbody id="tbody"><tr><td><span class="show-for-small-only"><b>Qtd.:</b></span> 1</td><td><span class="show-for-small-only"><b>Pedido:</b></span> Grande 2 Sabores<br><div><small><b>1º Sabor:</b> Quatro queijos • R$&nbsp;20,00</small><br></div><div><small><b>2º Sabor:</b> Quatro queijos • R$&nbsp;20,00</small><br></div><div><small><b>Com:</b> Sabor borda 1 • R$&nbsp;10,00</small><br></div><small><b>Obs.: </b></small></td><td><span class="show-for-small-only"><b>Valor:</b></span> R$&nbsp;50,00</td></tr><tr><td><span class="show-for-small-only"><b>Qtd.:</b></span> 2</td><td><span class="show-for-small-only"><b>Pedido:</b></span> Hamburguer de Pastel • R$&nbsp;20,20<br><div><small><b>2x - Adicional:</b> Cebola Crisp,coca cola,coca-cola,upa,teste2 • R$&nbsp;6,00</small><br></div><div><small><b>1x - Adicional:</b> Molho do Chef • R$&nbsp;5,00</small><br></div><div><small><b>1x - Adicional:</b> teste 1 • R$&nbsp;5,00</small><br></div><div><small><b>2x - Adicional:</b> Guarana Antartica • R$&nbsp;10,00</small><br></div><small><b>Obs.: </b></small></td><td><span class="show-for-small-only"><b>Valor:</b></span> R$&nbsp;72,20</td></tr><tr><td><span class="show-for-small-only"><b>Qtd.:</b></span> 2</td><td><span class="show-for-small-only"><b>Pedido:</b></span> hamburguerres • R$&nbsp;40,00<br><div><small><b>3x - Adicional:</b> Cebola Crisp,coca cola,coca-cola,upa,teste2 • R$&nbsp;9,00</small><br></div><div><small><b>1x - Adicional:</b> teste 1 • R$&nbsp;5,00</small><br></div><small><b>Obs.: </b></small></td><td><span class="show-for-small-only"><b>Valor:</b></span> R$&nbsp;68,00</td></tr></tbody><tfoot><tr><td><button id="printTicket" class="ui button red large basic">IMPRIMIR</button></td><td></td><td><div class="ui label red large basic"><b>Total:</b> R$&nbsp;190,20</div></td></tr></tfoot></table></div></div>  --}}
</div>

<div class="ui ticket modal">
  <div style="width: 100vw" id="ticketModal" class="content">
    @include('inner/modals/partials/ticket')
  </div>
</div>

<audio id="playAudio">
  <source src="{{assetsUrl('pedido.mp3')}}">
</audio>
@endsection


@section('js')
  <script>
    localStorage.token = '{{csrfToken}}'
    localStorage.printCopies = {{profile.options.print.copies}}
    localStorage.printWidth = '{{profile.options.print.width}}'
    const requests = [];
    // playSound()

    // (async () => {
    //   const myRequests = await $.get('{{route('request.myRequests')}}')
    //   // console.table(myRequests)
    //   if (myRequests) {
    //     requests.push(...myRequests)
    //     renderRequestList()
    //   }
    // })();

    if (sessionStorage.messageRead) {
      $('.message').transition('fade')
    }

    $('.message .close').on('click', function() {
      $(this).closest('.message').transition('fade')
      sessionStorage.messageRead = 1
    })

    document.querySelectorAll('.cupomPop').forEach(item => {
      $(item).popup({
        title: 'Cupom',
        content: item.dataset.cupom
      })
    })

    // setInterval(async () => {
    //   requests = [... JSON.parse(localStorage.requests)];
    //   const req = requests.shift();
    //   localStorage.requests = JSON.stringify(requests);

    //   if (req) {
    //     loadNewRequest(req);
    //     await playSound();
    //     setTimeout(() => {
    //       printPage();
    //     }, 3214);
    //   }
    // }, 3300);

    const placeholders = {};

    (async () => {
      const profile = await $.get('{{route('myProfile')}}')

      placeholders.statusProduction = profile.options.placeholders.statusProduction
      placeholders.statusSend = profile.options.placeholders.statusSend
      placeholders.statusToRemove = profile.options.placeholders.statusToRemove
    })();


    function hideThead() {
      document.querySelectorAll('thead.hide-for-small-only').forEach(item => {
          if (window.innerWidth < 768) {
            item.style.cssText = 'display: none !important'
          } else {
            item.style.cssText = ''
          }
        })
      }

      hideThead()

      window.addEventListener('resize', () => hideThead());

    const ws = adonis.Ws('wss://rt.whatsmenu.com.br').connect()
    ws.on('open', () => {
        console.log('realtime connected!')
        const client = ws.subscribe('request:{{profile.slug}}')

        client.on('ready', () => console.log('cliente conectado!'))

        function cupomValue(item) {
          let value = 0

          if (item.cupom) {
            if (item.cupom.type === 'value') {
              value = item.cupom.value
            } else if (item.cupom.type === 'percent') {
              value = item.total * item.cupom.value / 100
            }
          }

          return value
        }

        client.on('request:{{profile.slug}}', (request) => {
          request = JSON.parse(normalizeCaracteres(JSON.stringify(request)))
          if (request && request[0].profileId === {{profile.id}}){
            console.log(request)
            request.forEach(r => {
              const index = requests.findIndex(req => req.id === r.id)

              if (index > -1) {
                if (requests[index].print && !r.print) {
                  r.print = true;

                  (async () => $.ajax({
                      method: 'PATCH',
                      url: '/dashboard/request/'+ r.id +'/print/confirm',
                      data: {_csrf: localStorage.csrf}
                    }))();
                }

                // requests[index] = r
              } else {
                requests.unshift(r)
              }
            })
            renderRequestList()

            if (request.cupomId) {
              $(tr.querySelector('.cupomPop')).popup({
                title: 'Cupom',
                content: request.cupom.code
              })
            }

            addEventOpenNewRequestModal()

          }

        })

      })


      async function playSound() {
        try {

          const audio = document.querySelector('#playAudio')
          await audio.pause();
          audio.currentTime = 0;
          await audio.play();
          $('body').transition('shake');

        } catch (error) {
          console.error(error)
        }
      }
  </script>

  <script type="text/babel">
    function addEventCancelUncancelClick() {
      document.querySelectorAll('.actionCancel, .actionUncancel').forEach(btn => {
        // console.log(btn)
        btn.onclick = async () => {
            const update = await $.ajax({
               method: 'PATCH',
               url: '{{route('request.update.status')}}',
               data: {_csrf: '{{csrfToken}}', id: btn.dataset.id, status: btn.dataset.status === 'null' ? null : btn.dataset.status}
            })

            if (update.success) {
              window.location.reload()
            }
        }
      })
    }

  </script>

  @if(profile.options.print.textOnly)
    <script type="text/babel" src="/react/request-text-only.jsx?v=1.5">
  @else
    <script type="text/babel" src="/react/request.jsx?v=1.5">
  @endif

  </script>

  <script type="text/babel">
    class ListRequest extends React.Component {
      componentDidMount() {
        setTimeout(() => {
          printQueue();
        }, 1000);
      }

      render () {
        return (requests.map((item, tindex) => {
          return <ItemRequest request={item} key={tindex}/>
        }))
      }
    }

    class ItemRequest extends React.Component {

      openModal(request) {
        loadReactInElements(request)
        $('.pedido').modal('show')

        document.querySelector('#printTicket').onclick = printPage
      }

      printer(request) {
        window.requestPrint = request
        loadReactInElements(request)
        printPage()
      }

      async changeStatus(request, status, evt) {
        try {
          if (evt.target.href) {
            const update = await $.ajax({
                method: 'PATCH',
                url: '{{route('request.update.status')}}',
                data: {_csrf: '{{csrfToken}}', id: request.id, status: status}
            })
            console.log(update);
            if (update.success) {
              const r = requests.find(r => r.id === request.id)
              r.status = status
              evt.target.removeAttribute('href')
              evt.target.className = evt.target.className + ' basic'
            }
          }
        } catch (error) {
          console.error(error)
        }
      }

      formatStatus(text, name) {
        return encodeURI(text.split('[NOME]').join(name))
      }

      cupomValue(item) {
          let value = 0

          if (item.cupom) {
            if (item.cupom.type === 'value') {
              value = item.cupom.value
            } else if (item.cupom.type === 'percent') {
              value = item.total * item.cupom.value / 100
            }
          }

          return value
        }

      render() {

        let totalValue = (this.props.request.total - this.cupomValue(this.props.request))

        @if(profile.options.linkWhatsapp)
        const link = 'whatsapp://send?phone=55' + this.props.request.contact + '&'
        @else
        const link = 'https://wa.me/55' + this.props.request.contact + '?'
        @endif

        let total = (
          <td onClick={() => this.openModal(this.props.request)} className="bot-pedido"><span className="show-for-small-only"><b>Total: </b></span> {WhatsMenu.toBRL(this.props.request.total - this.cupomValue(this.props.request))}</td>
        )
          if (this.props.request.typeDelivery === 0 && this.props.request.taxDelivery > 0) {
            totalValue = (this.props.request.total - this.cupomValue(this.props.request)) + this.props.request.taxDelivery
            total = <td onClick={() => this.openModal(this.props.request)} className="bot-pedido"><span className="show-for-small-only"><b>Total: </b></span>{WhatsMenu.toBRL((this.props.request.total - this.cupomValue(this.props.request)) + this.props.request.taxDelivery)}</td>
          }

          let actions = null
          let sendOrRemove = null

          if (this.props.request.status === null) {

            if (this.props.request.typeDelivery === 0) {
              sendOrRemove = <a target="_blank" href={link + 'text=' + this.formatStatus(placeholders.statusSend, this.props.request.name)} onClick={(evt) => this.changeStatus(this.props.request, 'production', evt)} className="ui button small orange btn-transport">Entregando</a>
            } else {
              sendOrRemove = <a target="_blank" href={link + 'text=' + this.formatStatus(placeholders.statusToRemove, this.props.request.name)} onClick={(evt) => this.changeStatus(this.props.request, 'transport', evt)} className="ui button small orange btn-transport">Pronto Retirar</a>
            }

            actions = (
              <td>
                <a target="_blank" href={link + 'text=' + this.formatStatus(placeholders.statusProduction, this.props.request.name)} onClick={(evt) => this.changeStatus(this.props.request, 'production', evt)} className="ui button small blue btn-production">Recebido</a>
                { sendOrRemove }
              </td>
            )

          } else if (this.props.request.status === 'production') {
            if (this.props.request.typeDelivery === 0) {
              sendOrRemove = <a target="_blank" href={link + 'text=' + this.formatStatus(placeholders.statusSend, this.props.request.name)} onClick={(evt) => this.changeStatus(this.props.request, 'transport', evt)} className="ui button small orange btn-transport">Entregando</a>
            } else {
              sendOrRemove = <a target="_blank" href={link + 'text=' + this.formatStatus(placeholders.statusToRemove, this.props.request.name)} onClick={(evt) => this.changeStatus(this.props.request, 'transport', evt)} className="ui button small orange btn-transport">Pronto Retirar</a>
            }

            actions = (
              <td>
                <button data-request={this.props.request.id} className="ui button small blue basic btn-production">Recebido</button>
                { sendOrRemove }
              </td>
            )

          } else {

            actions = (
              <td>
                <button className="ui button small blue basic btn-production">Recebido</button>
                <button className="ui button small orange basic btn-transport">Entregando</button>
              </td>
            )

          }


        return (
          <tr className={this.props.request.status === 'canceled' ? 'positivee canceled' : 'positivee'}>
            <td onClick={() => this.printer(this.props.request)} className="printer"><i className="print icon"></i></td>
            <td onClick={() => this.openModal(this.props.request)}>wm{this.props.request.code}</td>
            <td onClick={() => this.openModal(this.props.request)}>{this.props.request.name}</td>
            <td onClick={() => this.openModal(this.props.request)}><span className="show-for-small-only"><b>Tel.: </b></span>{WhatsMenu.phoneMask(this.props.request.contact)}</td>
            {total}
            <td onClick={() => this.openModal(this.props.request)}><span className="show-for-small-only"><b>Pagamento em: </b></span>{this.props.request.formPayment}</td>
            <td onClick={() => this.openModal(this.props.request)}><span className="show-for-small-only"><b>Troco para: </b></span>{this.props.request.formPayment === 'Dinheiro' && this.props.request.transshipment > 0 ? WhatsMenu.toBRL(this.props.request.transshipment) : '-'}</td>
            <td onClick={() => this.openModal(this.props.request)}><span className="show-for-small-only"><b>Troco: </b></span>{this.props.request.formPayment === 'Dinheiro' && this.props.request.transshipment > 0 ? WhatsMenu.toBRL(this.props.request.transshipment - totalValue) : '-'}</td>
            {actions}
          </tr>
        )
      }
    }

    function renderRequestList() {
      ReactDOM.unmountComponentAtNode(document.querySelector('#listRequests'))
      ReactDOM.render(<ListRequest />, document.querySelector('#listRequests'))
    }

    // setTimeout(() => {
    //   renderRequestList();
    // }, 1000);

    (async () => {
      const myRequests = await $.get('{{route('request.myRequests')}}')
      // console.table(myRequests)
      if (myRequests) {
        requests.push(...myRequests)
        renderRequestList()
      }
    })();
  </script>

  @if(!auth.user.controls.firstAccess)
  <script>
    fbq('track', 'CompleteRegistration');
    fbq('track', 'Subscribe', {value: '49.90', currency: 'BRL', predicted_ltv: '47.90'});

    (async () => {
        $.ajax({
        method: 'PATCH',
        url: '{{route('user.set.firstAccess')}}',
        data: {_csrf: localStorage.csrf}
      })
    })();
  </script>
  @endif
@endsection
