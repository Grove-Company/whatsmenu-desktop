@layout('layout')
@section('pusher')
<div id="loading" class="ui overlay fullscreen modal">
  {{--  <div class="header">Header</div>  --}}
  <div class="content liveModal">
    <div class="ui basic segment centered center aligned">

      <h2>VOCÊ SERÁ ATENDIDO POR FABIANO GROVE</h2>
      <br><br>
      <h2><span id="spcnt">2</span> PESSOAS ON-LINE AGORA</h2>
      <div class="ui placeholder center aligned">
        <div class="paragraph">
          <div class="line"></div>
        </div>
      </div>
      <br>
      <button style="display:none" class="ui button massive green">Entrar na Live</button>
    </div>
  </div>
</div>

<section class="telaVideo">
  <div class="ui fluid container">
      <div id="bosta" style="margin: 0" class="ui grid middle aligned">
          <div class="stretched row bg-6">
              <div style="padding: 0" class="sixteen wide mobile ten wide tablet twelve wide computer column">
                  <div style="margin: 0" class="ui grid centered">
                      <div style="padding: 0" class="sixteen wide computer column center aligned bg-6">
                          <div class="ui embed">
                              <div id="video-embed"></div>
                              <div style="position: absolute;top: 0;width: 100%;height: 100%;background-color: transparent;z-index: 101;left: 0;"></div>
                          </div>
                          <div style="display: none" class="tiny-space botao"></div>
                          {{--  <a id="play" href="#" class="ui button green small-space font-button">Play</a>  --}}
                          {{--  <a id="mute" href="#" class="ui button green small-space font-button">Mute</a>  --}}
                          <a style="display: none" id="time" href="#" class="ui fluid button green small-space font-button">Pegar Tempo</a>
                          <a style="display: none" target="_blank" id="escondido" href="https://wa.me/5511937036875?text=Acabei%20de%20participar%20da%20Live%20e%20gostaria%20de%20mais%20informa%C3%A7%C3%B5es" class="ui fluid button green small-space font-button">
                            FALAR NO WHATSAPP
                          </a>
                          <div style="display: none" class="tiny-space botao mobile only"></div>
                      </div>
                  </div>
              </div>
              <div style="padding: 0" class="sixteen wide mobile six wide tablet four wide computer column">
                  <div id="chatContent" style="overflow-y:scroll;">

                  </div>
              </div>
          </div>
      </div>
  </div>
</section>
@endsection
@section('js')
  <script>
    let ready = true
    let count = 2
    document.querySelector('#spcnt').innerText = count

    const chatContent = document.querySelector('#chatContent')
    chatContent.className = (window.innerWidth < 800) ? '' : 'ui segment'

    const bosta = document.querySelector('#bosta')
    const btnPlay = document.querySelector('#play')
    const btnMute = document.querySelector('#mute')
    const btnTime = document.querySelector('#time')
    const uiembed = document.querySelector('.ui.embed')
    const escondido = document.querySelector('#escondido')
    const tinys = document.querySelectorAll('.tiny-space.botao')

    if (window.innerWidth < 800) {
      bosta.style.margin = '0'
    }

    window.addEventListener('resize', () => {

      if (window.innerWidth < 800) {

        document.querySelector('#chatContent').className = ''
        bosta.style.margin = '0'

      } else {

        bosta.style = ''
        document.querySelector('#chatContent').className = 'ui segment'

      }

    })

    btnTime.onclick = currentTime
      // 2. This code loads the IFrame Player API code asynchronously.
      const tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      const firstScriptTag = document.getElementsByTagName('script')[document.getElementsByTagName('script').length - 1];

      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      let player;

      function onYouTubeIframeAPIReady() {
        console.log('video pronto')
        player = new YT.Player('video-embed', {
          width:  uiembed.clientWidth,
          height: window.innerWidth < 800 ? 280 : uiembed.clientHeight,
          videoId: 'CYNMbWXX7hY',
          playerVars: { controls: 1, rel: 0, t: 0 },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        console.log('video pronto para rodar')
        ready = false
        document.querySelector('#loading button').style.display = ''

        // btnPlay.onclick = () => player.playVideo()
        // btnMute.onclick = (e) => {
        //   if (e.target.innerText === 'Mute') {
        //     player.mute()
        //     e.target.innerText = 'unMute'
        //   } else {
        //     player.unMute()
        //     e.target.innerText = 'Mute'
        //   }
        // }


        event.target.mute();
        event.target.setVolume(100)
        event.target.playVideo();

      }

      $('#loading')
        .modal({
          onShow: () => {
            const countInterval = setInterval(() => {
              if (ready) {
                document.querySelector('#spcnt').innerText = ++count
              } else {
                clearInterval(countInterval)
              }
            }, 2000);

            $('#loading, #loading *').click(() => {
              setTimeout(() => {
                player.playVideo();
                player.unMute();
                $('#loading').modal('hide')
              }, 1)
            })

          },
          onHide: () => {
            player.playVideo()
          },
        })
        .modal('show')

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      let done = false;
      function onPlayerStateChange(event) {
        setInterval(() => {
            if (player.getCurrentTime() >= 1200.986869 ) {
              if (escondido.style.display === 'none') {
                showHide()
              }
            }
        }, 1);
        // if (event.data == YT.PlayerState.PLAYING && !done) {
        //   setTimeout(stopVideo, 10000);
        //   done = true;
        // }
      }
      function stopVideo() {
        player.stopVideo();
      }

      function currentTime() {
        alert(player.getCurrentTime())
      }

      function showHide() {
        escondido.style.display = ''
        tinys.forEach(item => item.style.display = '')
        setInterval(() => {
          $('#escondido').transition('pulse')
          setTimeout(() => {
            $('#escondido').transition('pulse')
          }, 200);
        }, 3000);
      }
  </script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/luxon/3.0.1/luxon.min.js" integrity="sha512-6ZJuab/UnRq1muTChgrVxJhSgygmL2GMLVmSJN7pcBEqJ1dWPbqN9CiZ6U3HrcApTIJsLnMgXYBYgtVkJ8fWiw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  <script type="text/babel" src="/react/chat2.jsx"></script>
  <script type="text/babel">
    ReactDOM.render(<Chat />, document.querySelector('#chatContent'))
  </script>
@endsection
